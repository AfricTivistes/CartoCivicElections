---
// Import section components
import MainLayout from "@/layouts/MainLayout.astro";
import { getAll } from "@/lib/contentNocodb.astro";
import { slug } from "@/utils/slug";
import SimilarInitiatives from "@/components/SimilarInitiatives";

// Get initiatives 
const tableId = "m9erh9bplb8jihp";
const query = {
  viewId: "vwdobxvm00ayso6s",
  fields: [
    "Nom de l'initiative",
    "Pays",
    "Catégorie de l'initiative",
    "Thématique de l'initiative",
    "Description",
    "image-logo",
    "Type d'organisation",
    "Résumé descriptif de l'initiative",
    "Quels étaient les principaux objectifs de cette initiative citoyenne",
    "Cible de l'initiative",
    "Type d'organisation",
    "Zone d'intervention",
    "Pays de mise en œuvre",
    "Date de début",
    "Date de fin",
    "Site web de l'initiative",
    "Facebook",
    "X",
    "Linkedin"
  ],
  where: "(Status,eq,Traiter)~and(Langue,eq,en)",
};

export async function getStaticPaths() {
  const productEntries = await getAll(tableId, query);

  return productEntries.list.map((product) => {
    const initiativeName = product["Nom de l'initiative"];
    const productSlug = slug(initiativeName);

    return {
      params: { slug: productSlug },
      props: { product },
    };
  });
}

const { product } = Astro.props;

const pageTitle: string = `${product["Nom de l'initiative"]} | Initiative Details`;

const initiativeLink = "/initiatives";
const retourName = "Back to initiatives list";

const rawInitiatives = await getAll(tableId, query);
const initiatives = rawInitiatives.list.map((initiative) => ({
  title: initiative["Nom de l'initiative"],
  country: initiative["Pays"],
  category: initiative["Catégorie de l'initiative"],
  thematic: initiative["Thématique de l'initiative"],
  langue: 'en'
}));
---

<MainLayout title={pageTitle}>
  <div class="mx-auto max-w-[85rem] px-4 py-10 sm:px-6 lg:px-8 lg:py-14">
    <div class="max-w-4xl mx-auto">
      <a
        href={initiativeLink}
        class="mb-6 inline-flex items-center gap-x-1 text-sm text-primary-600 hover:text-primary-800"
      >
        <svg
          class="flex-shrink-0 w-4 h-4"
          xmlns="http://www.w3.org/2000/svg"
          width="24"
          height="24"
          viewBox="0 0 24 24"
          fill="none"
          stroke="currentColor"
          stroke-width="2"
          stroke-linecap="round"
          stroke-linejoin="round"
        >
          <path d="m15 18-6-6 6-6"></path>
        </svg>
        {retourName}
      </a>

      <div class="content-center text-center">
        <div>
          <h1
            class="block text-4xl font-bold tracking-tighter text-neutral-800 dark:text-neutral-200 sm:text-5xl md:text-6xl lg:text-7xl"
          >
            {product["Nom de l'initiative"]}
          </h1>
          <h2
            class="text-balance text-3xl tracking-tight text-neutral-800 dark:text-neutral-200 md:leading-tight lg:text-4xl"
          >
            {product["Pays"]}
          </h2>
        </div>
        <div>
          <p
            id="fadeText"
            class="mb-8 max-w-prose text-pretty font-light text-neutral-700 dark:text-neutral-300 sm:text-xl"
          >
            {product["Thématique de l'initiative"]}
          </p>
        </div>
      </div>

      <div class="mt-12 grid gap-8 md:grid-cols-2">
        <div class="border-b border-neutral-200 pb-8 dark:border-neutral-700">
          <h3 class="mb-4 text-lg font-bold text-neutral-800 dark:text-neutral-200">
            Initiative Details
          </h3>
          <div class="grid gap-6">
            <div>
              <h3 class="text-sm font-bold uppercase tracking-wide text-neutral-800 dark:text-neutral-200">
                Category
              </h3>
              <p class="mt-1 text-neutral-600 dark:text-neutral-400">
                {product["Catégorie de l'initiative"]}
              </p>
            </div>
            <div>
              <h3 class="text-sm font-bold uppercase tracking-wide text-neutral-800 dark:text-neutral-200">
                Organization Type
              </h3>
              <p class="mt-1 text-neutral-600 dark:text-neutral-400">
                {product["Type d'organisation"]}
              </p>
            </div>
            <div>
              <h3 class="text-sm font-bold uppercase tracking-wide text-neutral-800 dark:text-neutral-200">
                Target Audience
              </h3>
              <p class="mt-1 text-neutral-600 dark:text-neutral-400">
                {product["Cible de l'initiative"]}
              </p>
            </div>
            <div>
              <h3 class="text-sm font-bold uppercase tracking-wide text-neutral-800 dark:text-neutral-200">
                Implementation Area
              </h3>
              <p class="mt-1 text-neutral-600 dark:text-neutral-400">
                {product["Zone d'intervention"]}
              </p>
            </div>
            <div>
              <h3 class="text-sm font-bold uppercase tracking-wide text-neutral-800 dark:text-neutral-200">
                Implementation Country
              </h3>
              <p class="mt-1 text-neutral-600 dark:text-neutral-400">
                {product["Pays de mise en œuvre"]}
              </p>
            </div>
            <div>
              <h3 class="text-sm font-bold uppercase tracking-wide text-neutral-800 dark:text-neutral-200">
                Duration
              </h3>
              <p class="mt-1 text-neutral-600 dark:text-neutral-400">
                From {product["Date de début"]} to {product["Date de fin"]}
              </p>
            </div>
          </div>
        </div>

        <div class="border-b border-neutral-200 pb-8 dark:border-neutral-700">
          <h3 class="mb-4 text-lg font-bold text-neutral-800 dark:text-neutral-200">
            Links & Social Media
          </h3>
          <div class="grid gap-6">
            {
              product["Site web de l'initiative"] && (
                <div>
                  <h3 class="text-sm font-bold uppercase tracking-wide text-neutral-800 dark:text-neutral-200">
                    Website
                  </h3>
                  <a
                    href={product["Site web de l'initiative"]}
                    class="mt-1 text-primary-600 hover:text-primary-700 dark:text-primary-500 dark:hover:text-primary-400"
                    target="_blank"
                    rel="noopener noreferrer"
                  >
                    Visit Website
                  </a>
                </div>
              )
            }
            {
              product["Facebook"] && (
                <div>
                  <h3 class="text-sm font-bold uppercase tracking-wide text-neutral-800 dark:text-neutral-200">
                    Facebook
                  </h3>
                  <a
                    href={product["Facebook"]}
                    class="mt-1 text-primary-600 hover:text-primary-700 dark:text-primary-500 dark:hover:text-primary-400"
                    target="_blank"
                    rel="noopener noreferrer"
                  >
                    Facebook Page
                  </a>
                </div>
              )
            }
            {
              product["X"] && (
                <div>
                  <h3 class="text-sm font-bold uppercase tracking-wide text-neutral-800 dark:text-neutral-200">
                    X (Twitter)
                  </h3>
                  <a
                    href={product["X"]}
                    class="mt-1 text-primary-600 hover:text-primary-700 dark:text-primary-500 dark:hover:text-primary-400"
                    target="_blank"
                    rel="noopener noreferrer"
                  >
                    X Profile
                  </a>
                </div>
              )
            }
            {
              product["Linkedin"] && (
                <div>
                  <h3 class="text-sm font-bold uppercase tracking-wide text-neutral-800 dark:text-neutral-200">
                    LinkedIn
                  </h3>
                  <a
                    href={product["Linkedin"]}
                    class="mt-1 text-primary-600 hover:text-primary-700 dark:text-primary-500 dark:hover:text-primary-400"
                    target="_blank"
                    rel="noopener noreferrer"
                  >
                    LinkedIn Page
                  </a>
                </div>
              )
            }
          </div>
        </div>
      </div>

      <div class="mt-12">
        <h3 class="text-lg font-bold text-neutral-800 dark:text-neutral-200">
          Initiative Summary
        </h3>
        <p class="mt-3 text-pretty text-neutral-600 dark:text-neutral-400"
        set:html={product["Description"]?.replace(/(\r\n|\n|\r)/gm, "<br>")}
        >
        </p>
      </div>

      <div class="mt-12">
        <h3 class="text-lg font-bold text-neutral-800 dark:text-neutral-200">
          Main Objectives
        </h3>
        <p class="mt-3 text-pretty text-neutral-600 dark:text-neutral-400"
        set:html={product["Quels étaient les principaux objectifs de cette initiative citoyenne"]?.replace(/(\r\n|\n|\r)/gm, "<br>")}
        >
        </p>
      </div>

      <SimilarInitiatives client:load currentInitiative={product} allInitiatives={initiatives} language="en" />
    </div>
  </div>
</MainLayout>

<script>
    import { gsap } from "gsap";

    type AnimationSettings = {
      autoAlpha?: number;
      y?: number;
      x?: number;
      willChange?: string;
    };

    function setElementAnimationDefaults(
      id: string,
      settings: AnimationSettings
    ) {
      gsap.set(id, settings);
    }

    setElementAnimationDefaults("#fadeText", {
      autoAlpha: 0,
      y: 50,
      willChange: "transform, opacity",
    });

    setElementAnimationDefaults("#fadeInUp", {
      autoAlpha: 0,
      y: 50,
      willChange: "transform, opacity",
    });

    setElementAnimationDefaults("#fadeInMoveRight", {
      autoAlpha: 0,
      x: 300,
      willChange: "transform, opacity",
    });

    let timeline = gsap.timeline({ defaults: { overwrite: "auto" } });

    timeline.to("#fadeText", {
      duration: 1.5,
      autoAlpha: 1,
      y: 0,
      delay: 1,
      ease: "power2.out",
    });

    timeline.to(
      "#fadeInUp",
      { duration: 1.5, autoAlpha: 1, y: 0, ease: "power2.out" },
      "-=1.2"
    );

    timeline.to(
      "#fadeInMoveRight",
      { duration: 1.5, autoAlpha: 1, x: 0, ease: "power2.inOut" },
      "-=1.4"
    );

    timeline.to("#overlay", { duration: 1, autoAlpha: 0, delay: 0.2 });
  </script>
  <script>
    document.addEventListener("DOMContentLoaded", function () {
      function setButtonInactive(btn: any, activeButton: any) {
        if (btn !== activeButton) {
          btn.classList.remove(
            "active",
            "bg-neutral-100",
            "hover:border-transparent",
            "dark:bg-white/[.05]"
          );

          const tabId = btn.getAttribute("data-target");
          if (tabId) {
            const contentElement = document.querySelector(tabId);
            if (contentElement) {
              contentElement.classList.add("hidden");
            }
          }

          changeHeadingStyle(
            btn,
            ["text-neutral-800", "dark:text-neutral-200"],
            ["text-orange-400", "dark:text-orange-300"]
          );
        }
      }

      function activateButton(button: any) {
        button.classList.add(
          "active",
          "bg-neutral-100",
          ",hover:border-transparent",
          "dark:bg-white/[.05]"
        );

        const tabId = button.getAttribute("data-target");
        if (tabId) {
          const contentElementToShow = document.querySelector(tabId);
          if (contentElementToShow) {
            contentElementToShow.classList.remove("hidden");
          }
        }

        changeHeadingStyle(
          button,
          ["text-orange-400", "dark:text-orange-300"],
          ["text-neutral-800", "dark:text-neutral-200"]
        );
      }

      function changeHeadingStyle(
        button: any,
        addClasses: any,
        removeClasses: any
      ) {
        let heading = button.querySelector("span");
        if (heading) {
          heading.classList.remove(...removeClasses);
          heading.classList.add(...addClasses);
        }
      }

      const tabButtons = document.querySelectorAll("[data-target]");

      if (tabButtons.length > 0) {
        changeHeadingStyle(
          tabButtons[0],
          ["text-orange-400", "dark:text-orange-300"],
          []
        );
      }

      tabButtons.forEach((button) => {
        button.addEventListener("click", () => {
          tabButtons.forEach((btn) => setButtonInactive(btn, button));
          activateButton(button);
        });
      });
    });
  </script>
</replit_final_file>