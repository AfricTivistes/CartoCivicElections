---
import { getAll } from "@/lib/contentNocodb.astro";
import countryCoordinates from "@/utils/pays.json";
interface Props {
  title?: string;
}

const { title } = Astro.props;

// Fetch initiatives data
const tableId = "mrv8bch7o0jh5ld";
const query = {
  viewId: "vw793taeypy81he9",
  fields: [
    "Pays / Country"
  ]
};

const Initiatives = await getAll(tableId, query);

// Process initiatives to get country data
const countryData = {};
Initiatives.list.forEach((initiative) => {
  const country = initiative['Pays / Country'];
  if (country) {
    if (!countryData[country]) {
      countryData[country] = {
        count: 0
      };
    }
    countryData[country].count += 1;
  }
});

// Create features array for the map
const points = {
  type: 'FeatureCollection',
  features: Object.entries(countryData).map(([country, data]) => {
    const coordinates = countryCoordinates[country];
    if (coordinates) {
      return {
        type: 'Feature',
        geometry: {
          type: 'Point',
          coordinates: coordinates
        },
        properties: {
          title: country,
          description: `Initiatives en ${country}`,
          country: country,
          count: data.count
        }
      };
    }
    return null;
  }).filter(Boolean)
};
//const pointsJson = JSON.stringify(points);
//console.log(pointsJson);
---
<section class="mx-auto max-w-[85rem] px-4 py-10 sm:px-6 lg:px-8 lg:py-14 2xl:max-w-full">
  <h1
    class="block text-balance text-center text-3xl font-bold tracking-tight text-neutral-800 dark:text-neutral-200 sm:text-4xl lg:text-6xl lg:leading-tight"
  >
    <!-- About Fragment: https://docs.astro.build/en/basics/astro-syntax/#fragments -->
    <Fragment set:html={title} />
  </h1>
  <div id="map" class="h-[600px] w-full rounded-lg md:mb-4"></div>
</section>

<script>
  import maplibregl from 'maplibre-gl';
  
  // Initialize the map when the component mounts
  const initMap = () => {
    const map = new maplibregl.Map({
      container: 'map',
      style: {
        version: 8,
        sources: {
          'osm': {
            type: 'raster',
            tiles: ['https://tile.openstreetmap.org/{z}/{x}/{y}.png'],
            tileSize: 256,
            attribution: '© OpenStreetMap Contributors'
          }
        },
        layers: [{
          id: 'osm',
          type: 'raster',
          source: 'osm',
          minzoom: 0,
          maxzoom: 19
        }]
      },
      center: [20, 0], // Center of Africa
      zoom: 3
    });

    // Add navigation controls
    map.addControl(new maplibregl.NavigationControl());

    // African countries data points
    const points = {"type":"FeatureCollection","features":[{"type":"Feature","geometry":{"type":"Point","coordinates":[43.872219,-11.875001]},"properties":{"title":"Comores","description":"Initiatives en Comores","country":"Comores","count":1}},{"type":"Feature","geometry":{"type":"Point","coordinates":[2.213749,13.55]},"properties":{"title":"République du Niger","description":"Initiatives en République du Niger","country":"République du Niger","count":1}},{"type":"Feature","geometry":{"type":"Point","coordinates":[2.315834,9.30769]},"properties":{"title":"Bénin","description":"Initiatives en Bénin","country":"Bénin","count":2}},{"type":"Feature","geometry":{"type":"Point","coordinates":[24.684866,-22.328474]},"properties":{"title":"Botswana","description":"Initiatives en Botswana","country":"Botswana","count":1}},{"type":"Feature","geometry":{"type":"Point","coordinates":[-10.940835,21.00789]},"properties":{"title":"Mauritanie","description":"Initiatives en Mauritanie","country":"Mauritanie","count":3}},{"type":"Feature","geometry":{"type":"Point","coordinates":[27.849332,-13.133897]},"properties":{"title":"Zambie","description":"Initiatives en Zambie","country":"Zambie","count":2}},{"type":"Feature","geometry":{"type":"Point","coordinates":[-9.696645,9.945587]},"properties":{"title":"République de Guinée","description":"Initiatives en République de Guinée","country":"République de Guinée","count":4}},{"type":"Feature","geometry":{"type":"Point","coordinates":[12.354722,7.369722]},"properties":{"title":"Cameroun","description":"Initiatives en Cameroun","country":"Cameroun","count":5}},{"type":"Feature","geometry":{"type":"Point","coordinates":[21.758664,-4.038333]},"properties":{"title":"République démocratique du Congo","description":"Initiatives en République démocratique du Congo","country":"République démocratique du Congo","count":3}},{"type":"Feature","geometry":{"type":"Point","coordinates":[18.732207,15.454166]},"properties":{"title":"Tchad","description":"Initiatives en Tchad","country":"Tchad","count":1}},{"type":"Feature","geometry":{"type":"Point","coordinates":[-14.452362,14.497401]},"properties":{"title":"Sénégal","description":"Initiatives en Sénégal","country":"Sénégal","count":2}},{"type":"Feature","geometry":{"type":"Point","coordinates":[32.290275,1.373333]},"properties":{"title":"Ouganda","description":"Initiatives en Ouganda","country":"Ouganda","count":2}},{"type":"Feature","geometry":{"type":"Point","coordinates":[37.906193,-0.023559]},"properties":{"title":"Kenya","description":"Initiatives en Kenya","country":"Kenya","count":4}},{"type":"Feature","geometry":{"type":"Point","coordinates":[11.609444,-0.803689]},"properties":{"title":"Gabon","description":"Initiatives en Gabon","country":"Gabon","count":2}},{"type":"Feature","geometry":{"type":"Point","coordinates":[34.888822,-6.369028]},"properties":{"title":"Tanzanie","description":"Initiatives en Tanzanie","country":"Tanzanie","count":3}},{"type":"Feature","geometry":{"type":"Point","coordinates":[40.489673,9.145]},"properties":{"title":"Éthiopie","description":"Initiatives en Éthiopie","country":"Éthiopie","count":1}},{"type":"Feature","geometry":{"type":"Point","coordinates":[9.537499,34.014478]},"properties":{"title":"Tunisie","description":"Initiatives en Tunisie","country":"Tunisie","count":1}},{"type":"Feature","geometry":{"type":"Point","coordinates":[20.939444,6.611111]},"properties":{"title":"République centrafricaine","description":"Initiatives en République centrafricaine","country":"République centrafricaine","count":1}},{"type":"Feature","geometry":{"type":"Point","coordinates":[29.154857,-19.015438]},"properties":{"title":"Zimbabwe","description":"Initiatives en Zimbabwe","country":"Zimbabwe","count":2}}]};

    map.on('load', () => {
      // Add the source for clusters
      map.addSource('initiatives', {
        type: 'geojson',
        data: points,
        cluster: true,
        clusterMaxZoom: 14,
        clusterRadius: 50
      });

      // Add cluster layer
      map.addLayer({
        id: 'clusters',
        type: 'circle',
        source: 'initiatives',
        filter: ['has', 'point_count'],
        paint: {
          'circle-color': [
            'step',
            ['get', 'point_count'],
            '#FB923C', // Primary orange color for small clusters
            10,
            '#EA580C', // Darker orange for medium clusters
            30,
            '#9A3412' // Darkest orange for large clusters
          ],
          'circle-radius': [
            'step',
            ['get', 'point_count'],
            20,
            10,
            30,
            30,
            40
          ]
        }
      });

      // Add cluster count
      map.addLayer({
        id: 'cluster-count',
        type: 'symbol',
        source: 'initiatives',
        filter: ['has', 'point_count'],
        layout: {
          'text-field': '{point_count_abbreviated}',
          'text-font': ['DIN Offc Pro Medium', 'Arial Unicode MS Bold'],
          'text-size': 12
        },
        paint: {
          'text-color': '#ffffff'
        }
      });

      // Add unclustered point layer
      map.addLayer({
        id: 'unclustered-point',
        type: 'circle',
        source: 'initiatives',
        filter: ['!', ['has', 'point_count']],
        paint: {
          'circle-color': '#FB923C',
          'circle-radius': 8,
          'circle-stroke-width': 1,
          'circle-stroke-color': '#fff'
        }
      });

      // Create a popup for individual points
      const popup = new maplibregl.Popup({
        closeButton: false,
        closeOnClick: false
      });

      map.on('mouseenter', 'unclustered-point', (e) => {
        map.getCanvas().style.cursor = 'pointer';
        
        const coordinates = e.features[0].geometry.coordinates.slice();
        const { title, description, count } = e.features[0].properties;
        
        const popupContent = `
          <a href="/initiatives/${title.toLowerCase()}" class="block">
            <h3 class="font-bold text-lg">${title}</h3>
            <p class="text-sm">${description}</p>
            <p class="text-sm mt-2">${count} initiative${count > 1 ? 's' : ''}</p>
          </a>
        `;

        popup.setLngLat(coordinates)
          .setHTML(popupContent)
          .addTo(map);
      });

      map.on('mouseleave', 'unclustered-point', () => {
        map.getCanvas().style.cursor = '';
        popup.remove();
      });

      // Add click handler for unclustered points
      map.on('click', 'unclustered-point', (e) => {
        const { title } = e.features[0].properties;
        window.location.href = `/initiatives`;
      });
    });

    // Inspect a cluster on click
    map.on('click', 'clusters', (e) => {
      const features = map.queryRenderedFeatures(e.point, {
        layers: ['clusters']
      });
      const clusterId = features[0].properties.cluster_id;
      map.getSource('initiatives').getClusterExpansionZoom(
        clusterId,
        (err, zoom) => {
          if (err) return;

          map.easeTo({
            center: features[0].geometry.coordinates,
            zoom: zoom
          });
        }
      );
    });

    // Show pointer cursor on hover
    map.on('mouseenter', 'clusters', () => {
      map.getCanvas().style.cursor = 'pointer';
    });
    map.on('mouseleave', 'clusters', () => {
      map.getCanvas().style.cursor = '';
    });
  };

  // Initialize map when component mounts
  document.addEventListener('DOMContentLoaded', initMap);
</script>

<style is:global>
  @import 'maplibre-gl/dist/maplibre-gl.css';
</style>
