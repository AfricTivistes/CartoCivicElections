---
//Import relevant dependencies
import ThemeIcon from "@components/ThemeIcon.astro";
import NavLink from "@components/ui/links/NavLink.astro";
import enStrings from "@utils/navigation.ts";
import frStrings from "@utils/fr/navigation.ts";
import LanguagePicker from "@components/ui/LanguagePicker.astro";
import { Image } from "astro:assets";
import Logo from "../../../images/logo-soobu.png";
import SecondaryCTA from "@/components/ui/buttons/SecondaryCTA.astro";

// Select the correct translation based on the page's lang prop:
const formLink =
  Astro.currentLocale === "fr"
    ? "https://chk.me/3YMEbfE"
    : "https://chk.me/8TAqN45";
const strings = Astro.currentLocale === "fr" ? frStrings : enStrings;
const homeUrl = Astro.currentLocale === "fr" ? "/fr" : "/";
const submitButton =
  Astro.currentLocale === "fr"
    ? "Soumettre une initiative!"
    : "Submit an initiative!";
const newsletterLink =
  Astro.currentLocale === "fr"
    ? "https://landing.mailerlite.com/webforms/landing/s9v5l8"
    : "https://landing.mailerlite.com/webforms/landing/c8s2a3";
const newsletterButton =
  Astro.currentLocale === "fr" ? "S'inscrire" : "Subscribe";

const secondaryBtn =
  Astro.currentLocale === "fr" ? "Projet AHEAD Africa" : "AHEAD Africa project";
const secondaryBtnURL =
  Astro.currentLocale === "fr"
    ? "https://ahead.africa/fr/"
    : "https://ahead.africa/en/";
---

<!-- Main header component -->
<header
  class="sticky inset-x-0 top-4 z-50 w-full flex-nowrap text-sm md:flex-nowrap md:justify-start"
>
  <!--nav
    class="border-yellow-100/40 relative mx-2 w-full rounded-[36px] border px-4 py-3 backdrop-blur-md dark:border-neutral-700/40 dark:bg-[#2D2D2D] dark:backdrop-blur-md md:flex md:items-center md:justify-between md:px-6 md:py-0 lg:px-8 xl:mx-auto"
    aria-label="Global"
  >
    <div class="flex items-center justify-between">
      <a
        class="flex-none rounded-lg text-xl font-bold outline-none ring-zinc-500 focus-visible:ring dark:ring-zinc-200 dark:focus:outline-none"
        href={homeUrl}
        aria-label="Brand"
      >
        <Image src={Logo} alt="Logo" class="h-auto w-24" />
      </a>
      <div class="ml-auto mr-5 md:hidden">
        <button
          type="button"
          class="hs-collapse-toggle flex h-8 w-8 items-center justify-center rounded-full text-sm font-bold text-neutral-600 transition duration-300 hover:bg-neutral-200 disabled:pointer-events-none disabled:opacity-50 dark:text-neutral-400 dark:hover:bg-neutral-700 dark:focus:outline-none"
          data-hs-collapse="#navbar-collapse-with-animation-ahead"
          aria-controls="navbar-collapse-with-animation-ahead"
          aria-label="Toggle navigation"
        >
          <svg
            class="h-[1.25rem] w-[1.25rem] flex-shrink-0 hs-collapse-open:hidden"
            width="24"
            height="24"
            viewBox="0 0 24 24"
            fill="none"
            stroke="currentColor"
            stroke-width="2"
            stroke-linecap="round"
            stroke-linejoin="round"
          >
            <line x1="3" x2="21" y1="6" y2="6"></line>
            <line x1="3" x2="21" y1="12" y2="12"></line>
            <line x1="3" x2="21" y1="18" y2="18"></line>
          </svg>
          <svg
            class="hidden h-[1.25rem] w-[1.25rem] flex-shrink-0 hs-collapse-open:block"
            width="24"
            height="24"
            viewBox="0 0 24 24"
            fill="none"
            stroke="currentColor"
            stroke-width="2"
            stroke-linecap="round"
            stroke-linejoin="round"
          >
            <path d="M18 6 6 18"></path>
            <path d="m6 6 12 12"></path>
          </svg>
        </button>
      </div>
    </div>
    <div
      id="navbar-collapse-with-animation-ahead"
      class="hs-collapse hidden grow basis-full overflow-hidden font-bold transition-all duration-300 md:block"
    >
      <div
        class="mt-5 flex flex-col gap-x-0 gap-y-4 md:mt-0 md:flex-row md:items-center md:justify-end md:gap-x-4 md:gap-y-0 md:ps-7 lg:gap-x-7"
      >
        {
          strings.navBarAhead.map((link) => (
            <a
              href={link.url}
              data-astro-prefetch
              class="rounded-lg text-base font-medium text-primary-black outline-none hover:text-primary-yellow focus-visible:ring dark:text-neutral-400 dark:ring-zinc-200 dark:hover:text-primary-yellow dark:focus:outline-none md:py-3 md:text-sm 2xl:text-base"
            >
              {link.name}
            </a>
          ))
        }

        <a href={newsletterLink}>
          <span
            class="ms-1 inline rounded-lg bg-primary-yellow px-2 py-1 text-xs font-bold text-primary-black dark:bg-primary-yellow dark:text-primary-black"
          >
            {newsletterButton}
          </span>
        </a>
      </div>
    </div>
  </nav-->

  <!-- Navigation container -->
  <nav
    class="border-yellow-100/40 relative mx-2 w-full rounded-[36px] border bg-secondary-green px-4 py-3 backdrop-blur-md dark:border-neutral-700/40 dark:bg-[#2D2D2D] dark:backdrop-blur-md md:flex md:items-center md:justify-between md:px-6 md:py-0 lg:px-8 xl:mx-auto"
    aria-label="Global"
  >
    <!-- Brand logo -->
    <a
      class="flex-none rounded-lg text-xl font-bold outline-none ring-zinc-500 focus-visible:ring dark:ring-zinc-200 dark:focus:outline-none"
      href={homeUrl}
      aria-label="Brand"
    >
      <Image src={Logo} alt="Logo" class="h-auto w-60" />
    </a>
    <div class="flex items-center justify-between">
      <!-- Collapse toggle for smaller screens -->
      <div class="ml-auto mr-5 md:hidden">
        <button
          type="button"
          class="hs-collapse-toggle flex h-8 w-8 items-center justify-center rounded-full text-sm font-bold text-neutral-600 transition duration-300 hover:bg-neutral-200 disabled:pointer-events-none disabled:opacity-50 dark:text-neutral-400 dark:hover:bg-neutral-700 dark:focus:outline-none"
          data-hs-collapse="#navbar-collapse-with-animation"
          aria-controls="navbar-collapse-with-animation"
          aria-label="Toggle navigation"
        >
          <svg
            class="h-[1.25rem] w-[1.25rem] flex-shrink-0 hs-collapse-open:hidden"
            width="24"
            height="24"
            viewBox="0 0 24 24"
            fill="none"
            stroke="currentColor"
            stroke-width="2"
            stroke-linecap="round"
            stroke-linejoin="round"
          >
            <line x1="3" x2="21" y1="6" y2="6"></line>
            <line x1="3" x2="21" y1="12" y2="12"></line>
            <line x1="3" x2="21" y1="18" y2="18"></line>
          </svg>
          <svg
            class="hidden h-[1.25rem] w-[1.25rem] flex-shrink-0 hs-collapse-open:block"
            width="24"
            height="24"
            viewBox="0 0 24 24"
            fill="none"
            stroke="currentColor"
            stroke-width="2"
            stroke-linecap="round"
            stroke-linejoin="round"
          >
            <path d="M18 6 6 18"></path>
            <path d="m6 6 12 12"></path>
          </svg>
        </button>
      </div>
    </div>
    <!-- Contains navigation links -->
    <div
      id="navbar-collapse-with-animation"
      class="hs-collapse hidden grow basis-full overflow-hidden transition-all duration-300 md:block"
    >
      <!-- Navigation links container -->
      <div
        class="mt-5 flex flex-col gap-x-0 gap-y-4 md:mt-0 md:flex-row md:items-center md:justify-end md:gap-x-4 md:gap-y-0 md:ps-7 lg:gap-x-7"
      >
        <SecondaryCTA
          title={secondaryBtn}
          url={secondaryBtnURL}
          target="_blank"
        />
        <!-- Navigation links and Authentication component -->
        {
          strings.navBarLinks.map((link) => (
            <NavLink url={link.url} name={link.name} />
          ))
        }
        |
        <a href={formLink}>
          <span
            class="ms-1 inline rounded-lg bg-primary-green px-2 py-1 text-xs font-bold text-neutral-50 dark:bg-primary-green dark:text-primary-black"
          >
            {submitButton}
          </span>
        </a>
        <LanguagePicker />

      </div>
    </div>
  </nav>
</header>
<!-- Theme Appearance script to manage light/dark modes -->
<script is:inline>
  const HSThemeAppearance = {
    init() {
      const defaultTheme = "default";
      let theme = localStorage.getItem("hs_theme") || defaultTheme;

      if (document.querySelector("html").classList.contains("dark")) return;
      this.setAppearance(theme);
    },
    _resetStylesOnLoad() {
      const $resetStyles = document.createElement("style");
      $resetStyles.innerText = `*{transition: unset !important;}`;
      $resetStyles.setAttribute("data-hs-appearance-onload-styles", "");
      document.head.appendChild($resetStyles);
      return $resetStyles;
    },
    setAppearance(theme, saveInStore = true, dispatchEvent = true) {
      const $resetStylesEl = this._resetStylesOnLoad();

      if (saveInStore) {
        localStorage.setItem("hs_theme", theme);
      }

      if (theme === "auto") {
        theme = window.matchMedia("(prefers-color-scheme: dark)").matches
          ? "dark"
          : "default";
      }

      document.querySelector("html").classList.remove("dark");
      document.querySelector("html").classList.remove("default");
      document.querySelector("html").classList.remove("auto");

      document
        .querySelector("html")
        .classList.add(this.getOriginalAppearance());

      setTimeout(() => {
        $resetStylesEl.remove();
      });

      if (dispatchEvent) {
        window.dispatchEvent(
          new CustomEvent("on-hs-appearance-change", { detail: theme })
        );
      }
    },
    getAppearance() {
      let theme = this.getOriginalAppearance();
      if (theme === "auto") {
        theme = window.matchMedia("(prefers-color-scheme: dark)").matches
          ? "dark"
          : "default";
      }
      return theme;
    },
    getOriginalAppearance() {
      const defaultTheme = "default";
      return localStorage.getItem("hs_theme") || defaultTheme;
    },
  };
  HSThemeAppearance.init();

  window
    .matchMedia("(prefers-color-scheme: dark)")
    .addEventListener("change", () => {
      if (HSThemeAppearance.getOriginalAppearance() === "auto") {
        HSThemeAppearance.setAppearance("auto", false);
      }
    });

  window.addEventListener("load", () => {
    const $clickableThemes = document.querySelectorAll(
      "[data-hs-theme-click-value]"
    );
    const $switchableThemes = document.querySelectorAll(
      "[data-hs-theme-switch]"
    );

    $clickableThemes.forEach(($item) => {
      $item.addEventListener("click", () =>
        HSThemeAppearance.setAppearance(
          $item.getAttribute("data-hs-theme-click-value"),
          true,
          $item
        )
      );
    });

    $switchableThemes.forEach(($item) => {
      $item.addEventListener("change", (e) => {
        HSThemeAppearance.setAppearance(e.target.checked ? "dark" : "default");
      });

      $item.checked = HSThemeAppearance.getAppearance() === "dark";
    });

    window.addEventListener("on-hs-appearance-change", (e) => {
      $switchableThemes.forEach(($item) => {
        $item.checked = e.detail === "dark";
      });
    });
  });
</script>
<!--Import the necessary Collapse and Overlay plugins-->
<!--https://preline.co/plugins/html/collapse.html-->
<!--https://preline.co/plugins/html/overlay.html-->
<script>
  import "@preline/collapse/index.js";
  import "@preline/overlay/index.js";
</script>
